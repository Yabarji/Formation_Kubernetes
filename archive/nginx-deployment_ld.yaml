---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app1
    version: '1.0'
    env: prod
  name: app1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app1
    matchExpressions:
      - { key: podEnv, operator: NotIn, values: ['staging', 'dev'] }
      - { key: status, operator: In, values: ['enabled'] }
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: app1
        podEnv: prod
        status: enabled
    spec:
      containers:
      - name: php73fpm
        image: php:7.3-fpm
        volumeMounts:
        - name: www
          mountPath: /srv/http
        ports:
          - name: php73
            containerPort: 9000
      - name: nginx
        image: nginx:1.19
        ports:
          - name: nginx-http
            containerPort: 80
          - name: nginx-https
            containerPort: 443
        env:
          - name: FORMATION
            value: 'kubernetes'
        volumeMounts:
        - name: www-nginx
          mountPath: /usr/share/nginx/html
        - name: conf
          mountPath: /etc/nginx/conf.d/
      nodeSelector:
        nodeEnv: prod
      volumes:
      - name: conf
        hostPath:
          path: /kube/conf
          type: Directory
      - name: www
        hostPath:
          path: /kube/www
          type: Directory
      - name: www-nginx
        emptyDir: {}
